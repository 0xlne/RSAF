on:
  push:
    branches:
      - master
  pull_request:
jobs:
  build-app:
    name: Build app
    runs-on: ubuntu-latest
    env:
      androidArch: x86_64
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true

      - name: Validate gradle wrapper checksum
        uses: gradle/actions/wrapper-validation@0bdd871935719febd78681f197cd39af5b6e16a6 # v4.2.2

      - name: Set up JDK 21
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          distribution: 'temurin'
          java-version: 21
          cache: gradle

      - name: Set up Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          cache-dependency-path: rcbridge/go.sum
          go-version-file: rcbridge/go.mod

      - name: Install gomobile
        shell: bash
        run: |-
          version=$(grep golang.org/x/mobile rcbridge/go.mod | awk '{print $2}')
          go install golang.org/x/mobile/cmd/gobind@"${version}"
          go install golang.org/x/mobile/cmd/gomobile@"${version}"

      - name: Get NDK version
        id: get_version
        shell: bash
        run: |
          sed -nr \
              -e 's/^\s*(compileSdk)\s*(=)\s([0-9]+).*$/\1\2\3/p' \
              -e 's/^\s*(ndkVersion)\s*(=)\s"(.+)".*$/\1\2\3/p' \
              app/build.gradle.kts \
              >> "${GITHUB_OUTPUT}"

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ steps.get_version.outputs.compileSdk }}-${{ env.androidArch }}-${{ steps.get_version.outputs.ndkVersion }}

      - name: Create AVD snapshot
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@62dbb605bba737720e10b196cb4220d374026a6d # v2.33.0
        with:
          # TODO: Remove after Google publishes AOSP-based image.
          target: google_apis
          api-level: ${{ steps.get_version.outputs.compileSdk }}
          arch: ${{ env.androidArch }}
          ndk: ${{ steps.get_version.outputs.ndkVersion }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Build and test
        uses: reactivecircus/android-emulator-runner@62dbb605bba737720e10b196cb4220d374026a6d # v2.33.0
        with:
          # TODO: Remove after Google publishes AOSP-based image.
          target: google_apis
          api-level: ${{ steps.get_version.outputs.compileSdk }}
          arch: ${{ env.androidArch }}
          ndk: ${{ steps.get_version.outputs.ndkVersion }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          # Debug build only since release builds require a signing key
          script: ./gradlew --no-daemon build connectedDebugAndroidTest -x assembleRelease
